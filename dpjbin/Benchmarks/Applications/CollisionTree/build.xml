
<project name="CollisionTree" default="compile" basedir=".">
	<description>
        Ant Build File for the CollisionTree.
    </description>

    <property name="seg" value="."/>

    <property name="src" location="${seg}/src"/>
	<property name="dpj_java" value="${seg}/dpj_java"/>
    <property name="class" value="${seg}/bin"/>

	<property file="build.properties" />
	  <!-- You may prefer to set javac.debug to false to reduce size. -->
	<property name="javac.debug" value="true" />
	<property name="javac.debuglevel" value="lines,source" />
      <!-- Having line numbers in debug output is useful for the 99.9%
           of non-public builds, esp. for custom-builders who have
           runtime problems.   - blaine  -->
	<property environment="env"/>
	<!--    end of defaults -->

	<path id="classpath">
		<pathelement location="${env.DPJ_ROOT}/Implementation/Runtime/classes" />

	</path>

	<target name="init">
		<mkdir dir="${src}" />
		<mkdir dir="${dpj_java}" />
		<mkdir dir="${class}" />
	</target>

	<!-- Compiles all the jME classes, including com.jmex.* -->
	<!-- This now compiles everything, including jmetest. Don't use the compile-test target. -->
	<target name="compile" depends="init" description="generate jme classes">
		<mkdir dir="${class}" />
		<copy todir="${class}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<!-- Generate list of files for dpjc to compile -->
		<exec executable="find" output="dpjfiles.txt">
			<arg value="${src}" />
			<arg value="-name" />
			<arg value="[a-zA-Z_]*.java" />
		</exec>
		
		<!-- Run all files through dpjc at once (since separate compilation isn't supported) -->
		<exec executable="dpjc">
			<!-- arg value="-seq" / -->
			<!-- arg value="-instrument" / -->
			<!-- arg value="-count" / -->
			
			<arg value="-sourcepath" />
			<arg value="${src}" />
			
			<!-- TODO This should really be derived from the classpath defined above -->
			<arg value="-classpath" />
			<arg value="${env.DPJ_ROOT}/Implementation/Runtime/classes" />
			
			<arg value="-d" />
			<arg value="${dpj_java}" />
			
			<arg value="@dpjfiles.txt" />
		</exec>
		
		<!-- Now compile everything with regular Java compiler -->
		<javac source="1.5" target="1.5" srcdir="${dpj_java}" destdir="${class}"
			executable="/usr/bin/javac"
			classpathref="classpath" listfiles="no" fork="true"
			memoryMaximumSize="1024m" debug="${javac.debug}"/>
	</target>


	<!-- Run the DPJ annotation counter for CollisionTree -->
	<target name="count" depends="init" description="count annotations">
		<mkdir dir="${class}" />
		<copy todir="${class}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<!-- Generate list of files for dpjc to compile -->
		<exec executable="find" output="dpjfiles.txt">
			<arg value="${src}" />
			<arg value="-name" />
			<arg value="[a-zA-Z_]*.java" />
		</exec>
		
		<!-- Run all files through dpjc at once, counting annotations -->
		<exec executable="dpjc">
			<arg value="-seq" />
			<arg value="-nowarn" />
			<arg value="-count" />
			
			<arg value="-sourcepath" />
			<arg value="${src}" />
			
			<arg value="-classpath" />
			<arg value="${env.DPJ_ROOT}/Implementation/Runtime/classes" />
			
			<arg value="-d" />
			<arg value="${dpj_java}" />
			
			<arg value="@dpjfiles.txt" />
		</exec>
	</target>
	

	<!-- Run the DPJ annotation counter for CollisionTree and the DPJ Runtime -->
	<target name="countAll" depends="init" description="count annotations">
		<mkdir dir="${class}" />
		<copy todir="${class}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<!-- Generate list of files for dpjc to compile -->
		<exec executable="find" output="dpjfiles.txt">
			<arg value="${src}" />
			<arg value="${env.DPJ_ROOT}/Implementation/Runtime/dpj" />
			<arg value="-name" />
			<arg value="[a-zA-Z_]*.java" />
		</exec>
		
		<!-- Run all files through dpjc at once, counting annotations -->
		<exec executable="dpjc">
			<arg value="-seq" />
			<arg value="-nowarn" />
			<arg value="-count" />
			
			<arg value="-sourcepath" />
			<arg value="${src}" />
			
			<arg value="-classpath" />
			<arg value="${env.DPJ_ROOT}/Implementation/Runtime/classes" />
			
			<arg value="-d" />
			<arg value="${dpj_java}" />
			
			<arg value="@dpjfiles.txt" />
		</exec>
	</target>


	<!-- Removes all compiled files and documentation, but leaves any created jars -->
	<target name="clean" description="clean up">
		<delete file="dpjfiles.txt" />
		<delete dir="${class}" />
		<delete dir="${dpj_java}" />
		<delete>
			<fileset dir="${src}" includes="**/*.class" />
		</delete>
	</target>

	<target name="rebuild" depends="clean" description="build from clean">
		<ant />
	</target>
</project>
